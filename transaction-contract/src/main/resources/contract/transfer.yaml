openapi: 3.0.3
info:
  version: 1.0.0
  description: Transfer APIs
  title: Transfer APIs

paths:
  /transfer:
    post:
      tags:
        - initiateTransfer
      summary: Initiate transfer
      operationId: initiateTransfer
      parameters:
        - $ref: '#/components/parameters/correlationId'
        - $ref: '#/components/parameters/jwt'
        - $ref: '#/components/parameters/idempotencyKey'
      requestBody:
        required: true
        content:
          application/v1+json:
            schema:
              $ref: '#/components/schemas/InitiateTransferBodyV1'
      responses:
        '201':
          $ref: '#/components/responses/Transfer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '408':
          $ref: '#/components/responses/Timeout'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /account/{accountId}/balance:
    get:
      tags:
        - account
      summary: Retrieves account balance details
      operationId: getAccountBalance
      parameters:
        - $ref: '#/components/parameters/correlationId'
        - $ref: '#/components/parameters/jwt'
        - $ref: '#/components/parameters/accountId'
      responses:
        '200':
          $ref: '#/components/responses/AccountBalance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '408':
          $ref: '#/components/responses/Timeout'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'


components:
  parameters:
    correlationId:
      name: correlationId
      description: Unique identifier to trace the request
      in: header
      schema:
        type: string
      required: false
    jwt:
      name: jwt
      description: JSON Web Token
      example: eyJhbGciOiJIUzI1NiJ9.eyJSb2xlIjoiQWRtaW4iLCJJc3N1ZXIiOiJJc3N1ZXIiLCJVc2VybmFtZSI6IkphdmFJblVzZSIsImV4cCI6MTY2NzYwNjUyMSwiaWF0IjoxNjY3NjA2NTIxfQ.MVez01NYx_dPmB39qYVL64LIyQO_mR73lR0zK2nlTHw
      in: header
      schema:
        type: string
      required: true
    idempotencyKey:
      name: idempotencyKey
      description: Unique value generated by the client which is used to recognize subsequent retries of the same request. Allows consumers to retry a request, without creating duplicate transfers
      example: 4564690a-4bea-11ec-81d3-0242ac130003
      in: header
      schema:
        type: string
      required: true
    accountId:
      name: accountId
      description: Unique identifier of the account for which the details are retrieved
      example: 'ddfab0da-5c9b-11ed-9b6a-0242ac120002'
      in: path
      schema:
        type: string
        pattern: UUID
      required: true

  schemas:
    ### Requests
    InitiateTransferBodyV1:
      title: Initiate transfer request body
      description: Transfer details used to initiate an account-to-account transfer
      type: object
      properties:
        reference:
          $ref: '#/components/schemas/Reference'
        amount:
          $ref: '#/components/schemas/TransferAmount'
        currencyCode:
          $ref: '#/components/schemas/CurrencyCode'
        sourceAccount:
          $ref: '#/components/schemas/SourceAccount'
        beneficiaryAccount:
          $ref: '#/components/schemas/BeneficiaryAccount'
        description:
          $ref: '#/components/schemas/TransferDescription'
        dateTime:
          $ref: '#/components/schemas/TransferInitiationDateTime'
        priority:
          $ref: '#/components/schemas/TransferPriority'
      required:
        - reference
        - amount
        - currencyCode
        - sourceAccount
        - beneficiaryAccount
        - description
        - dateTime

    ### Responses
    TransferResponseV1:
      title: Initiate transfer response body
      description: Transfer details and status
      type: object
      properties:
        transferId:
          $ref: '#/components/schemas/TransferId'
        reference:
          $ref: '#/components/schemas/Reference'
        amount:
          $ref: '#/components/schemas/TransferAmount'
        currencyCode:
          $ref: '#/components/schemas/CurrencyCode'
        sourceAccount:
          $ref: '#/components/schemas/SourceAccount'
        beneficiaryAccount:
          $ref: '#/components/schemas/BeneficiaryAccount'
        creationDateTime:
          $ref: '#/components/schemas/TransferCreationDateTime'
        status:
          $ref: '#/components/schemas/TransferStatus'

    AccountBalanceV1:
      title: Account balance response body
      description: Account balance details
      type: object
      properties:
        accountId:
          $ref: '#/components/schemas/AccountId'
        name:
          $ref: '#/components/schemas/AccountName'
        customerId:
          $ref: '#/components/schemas/CustomerId'
        accountBalance:
          $ref: '#/components/schemas/Amount'
        availableBalance:
          $ref: '#/components/schemas/Amount'
        blockecAccount:
          $ref: '#/components/schemas/Amount'
        currencyCode:
          $ref: '#/components/schemas/CurrencyCode'
        accountStatus:
          $ref: '#/components/schemas/AccountStatus'
        timestamp:
          $ref: '#/components/schemas/ResponseTimestamp'

    ### Parameters

    CustomerId:
      type: string
      description: Unique identifier of the customer
      pattern: "[a-zA-Z0-9-]"
      example: '73e92a64-e198-408d-8b40-e9c35165512d'

    SourceAccount:
      type: string
      description: Unique identifier of the account from where the money are transfered from
      pattern: UUID
      example: 'f9bb9fc2-5c97-11ed-9b6a-0242ac120002'
    BeneficiaryAccount:
      type: string
      description: Unique identifier of the account where the money are transfered to
      pattern: UUID
      example: 'ddfab0da-5c9b-11ed-9b6a-0242ac120002'
    AccountId:
      type: string
      description: Unique identifier of the account
      pattern: UUID
      example: 'ddfab0da-5c9b-11ed-9b6a-0242ac120002'
    AccountName:
      type: string
      description: Name / description of the account
      pattern: "[a-zA-Z0-9 _.;,-]{0,30}"
      example: Current account
    AccountStatus:
      type: string
      description: Account status
      enum: [ACTIVE|BLOCKED]
      example: ACTIVE
    Amount:
      type: string
      description: Amount in minor units
      pattern: '[1-9]{1}[0-9]{0,16}'
      example: 10232


    TransferId:
      type: string
      description: Unique identifier generated for transfer details
      pattern: UUID
      example: '46545d00-5cda-4462-8477-90caa75d011a'
    Reference:
      type: string
      description: Unique identifier generated by transfer's initiatior
      pattern: '[0-9]{9}'
      example:  001256788
    TransferAmount:
      type: string
      description: Transfer's amount in minor units (positive value)
      pattern: '[1-9]{1}[0-9]{0,16}'
      example: 100
    CurrencyCode:
      type: string
      description: Currency code of the amount as specified by ISO4217
      pattern: '[A-Z]{3}'
      example: AED
    TransferDescription:
      type: string
      description: Additional information for the transfer provided by tranfer initiator
      pattern: UUID
      example: Money for lunch
    TransferInitiationDateTime:
      type: string
      description: Date and time (UTC) of transfer initiation
      pattern: '((2[0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])) (([01][0-9])|(2[0-3])):(([0-5][0-9])):(([0-5][0-9]))'
      example: "2022-11-07 15:25:55"
    TransferCreationDateTime:
      type: string
      description: Date and time (UTC) of transfer creation
      pattern: '((2[0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])) (([01][0-9])|(2[0-3])):(([0-5][0-9])):(([0-5][0-9]))'
      example: "2022-11-07 15:25:55"
    ResponseTimestamp:
      type: string
      description: Date and time (UTC) of the response
      pattern: '((2[0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])) (([01][0-9])|(2[0-3])):(([0-5][0-9])):(([0-5][0-9]))'
      example: "2022-11-07 15:25:55"
    TransferPriority:
      type: string
      description: Describes if a transfer is urgent. Extra charges may apply if transfer is marked as URGENT
      enum: [NORMAL|URGENT]
      example: NORMAL
    TransferStatus:
      type: string
      description: Status of the transfer
      pattern: "[A-Z_-]{3,30}"


    Fault:
      title: Error or failure response
      description: Failure or error reponse body
      type: object
      properties:
        code:
          type: string
          description: Request's response code
          example: 400
        message:
          type: string
          description: Request's description
          example: Invalid request
        dateTime:
          type: string
          description: Error / fault's date time
          example: "2021-01-30T08:30:00Z"
          format: date-time


  responses:
    Transfer:
      description: Transfer details returned for the initiated details
      content:
        application/v1+json:
          schema:
            $ref: '#/components/schemas/TransferResponseV1'

    AccountBalance:
      description: Account details for the given accountId
      content:
        application/v1+json:
          schema:
            $ref: '#/components/schemas/AccountBalanceV1'

    BadRequest:
      description: Bad request response
      content:
        application/v1+json:
          schema:
            $ref: '#/components/schemas/Fault'
    Unauthorized:
      description: Unauthorized response
      content:
        application/v1+json:
          schema:
            $ref: '#/components/schemas/Fault'
    NotFound:
      description: Resource not found response
      headers:
        page:
          description: Current page number
          schema:
            type: integer
            minimum: 1
        totalPages:
          description: Total number of pages
          schema:
            type: integer
            minimum: 1
        resultsPerPage:
          description: Number of results per page
          schema:
            type: integer
            minimum: 1
            maximum: 100
      content:
        application/v1+json:
          schema:
            $ref: '#/components/schemas/Fault'
    MethodNotAllowed:
      description: Method not allowed response
      content:
        application/v1+json:
          schema:
            $ref: '#/components/schemas/Fault'
    NotAcceptable:
      description: Not acceptable media type response
      content:
        application/v1+json:
          schema:
            $ref: '#/components/schemas/Fault'
    Timeout:
      description: Timeout response
      content:
        application/v1+json:
          schema:
            $ref: '#/components/schemas/Fault'
    ServiceUnavailable:
      description: Service is not avaiable to process the request response
      content:
        application/v1+json:
          schema:
            $ref: '#/components/schemas/Fault'

